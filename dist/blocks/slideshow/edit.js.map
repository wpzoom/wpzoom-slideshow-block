{"version":3,"file":"blocks/slideshow/edit.js","mappings":"kCAAAA,EAAOC,QAAUC,OAAwB,e,UCAzCF,EAAOC,QAAUC,OAAW,GAAe,W,GCCvCC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CCtBqCC,OAAW,GAAQ,K,OCAnBA,OAAW,GAAc,WCAzBA,OAAW,GAAW,QCAtBA,OAAW,GAAQ,K,OCuC9CO,oBAAoBC,UAkBpBD,oBAAoBC,S","sources":["webpack://wpzoom-slideshow-block/external window \"ReactJSXRuntime\"","webpack://wpzoom-slideshow-block/external window [\"wp\",\"blockEditor\"]","webpack://wpzoom-slideshow-block/webpack/bootstrap","webpack://wpzoom-slideshow-block/external window [\"wp\",\"i18n\"]","webpack://wpzoom-slideshow-block/external window [\"wp\",\"components\"]","webpack://wpzoom-slideshow-block/external window [\"wp\",\"element\"]","webpack://wpzoom-slideshow-block/external window [\"wp\",\"data\"]","webpack://wpzoom-slideshow-block/./src/blocks/slideshow/edit.js"],"sourcesContent":["module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { store, useBlockProps, useInnerBlocksProps, InspectorControls, ButtonBlockAppender } from '@wordpress/block-editor';\nimport { PanelBody, ToggleControl, RangeControl, SelectControl, Button } from '@wordpress/components';\nimport { useEffect, useRef, useState } from '@wordpress/element';\nimport { useSelect } from \"@wordpress/data\";\nimport { seen, edit } from '@wordpress/icons';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n// Only allow wpzoom/slide blocks to be added\nconst ALLOWED_BLOCKS = ['wpzoom/slide'];\n\n// Define the template for initial slideshow creation with two slides\nconst SLIDESHOW_TEMPLATE = [\n\t[\n\t\t'wpzoom/slide',\n\t\t{},\n\t\t[\n\t\t\t[\n\t\t\t\t'core/cover',\n\t\t\t\t{\n\t\t\t\t\turl: wpzoomSlideshowData.pluginUrl + 'assets/media/demo.jpg',\n\t\t\t\t\tcustomOverlayColor: 'rgba(0, 0, 0, 0.3)',\n\t\t\t\t\tlock: {\n\t\t\t\t\t\tmove: true,\n\t\t\t\t\t\tremove: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t],\n\t[\n\t\t'wpzoom/slide',\n\t\t{},\n\t\t[\n\t\t\t[\n\t\t\t\t'core/cover',\n\t\t\t\t{\n\t\t\t\t\tbackgroundType: 'video',\n\t\t\t\t\turl: wpzoomSlideshowData.pluginUrl + 'assets/media/demo.mp4',\n\t\t\t\t\tcustomOverlayColor: 'rgba(0, 0, 0, 0.3)',\n\t\t\t\t\tlock: {\n\t\t\t\t\t\tmove: true,\n\t\t\t\t\t\tremove: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t]\n\t]\n];\n\nexport default function Edit({ clientId, isSelected, attributes, setAttributes }) {\n\tconst {\n\t\tuseNavigation, usePagination, useScrollbar, autoplay, loop,\n\t\tspeed, spaceBetween, slidesPerView, effect, direction,\n\t\tfreeMode, centeredSlides, cssMode, gridRows, controller, uniqueId\n\t} = attributes;\n\tconst blockInstance = useRef(null);\n\tconst swiperInstance = useRef(null);\n\n\t// States for preview mode\n\tconst [previewMode, setPreviewMode] = useState(false);\n\tconst hasInnerBlocksSelected = useSelect(\n\t\t(select) => select(store).hasSelectedInnerBlock(clientId, true)\n\t);\n\n\tconst { children, ...innerBlockProps } = useInnerBlocksProps(useBlockProps(), {\n\t\tallowedBlocks: ALLOWED_BLOCKS,\n\t\ttemplate: SLIDESHOW_TEMPLATE,\n\t\trenderAppender: false\n\t});\n\n\t// Generate a unique ID only if one doesn't already exist\n\tuseEffect(() => {\n\t\tif (!uniqueId) {\n\t\t\tconst newUniqueId = 'slideshow-' + Math.random().toString(36).substr(2, 9);\n\t\t\tsetAttributes({ uniqueId: newUniqueId });\n\t\t}\n\t}, [uniqueId]);\n\n\tuseEffect(() => {\n\t\tif (!previewMode) {\n\t\t\tdestroySlideshow();\n\t\t\treturn;\n\t\t}\n\n\t\tinitSlideshow();\n\t}, [previewMode]);\n\n\n\tfunction initSlideshow() {\n\t\tconst node = blockInstance.current?.querySelector('.swiper')\n\n\t\tswiperInstance.current?.destroy?.();\n\t\tswiperInstance.current = new Swiper(node, {\n\t\t\tslidesPerView: 1,\n\t\t\tobserveSlideChildren: true,\n\t\t\tpreventClicks: false,\n\t\t\tallowTouchMove: false,\n\t\t\t...attributes\n\t\t});\n\t}\n\n\tfunction destroySlideshow() {\n\t\tswiperInstance.current?.destroy?.();\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__(\"Slideshow Settings\", \"wpzoom-slideshow-block\")} initialOpen={true}>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Navigation\"\n\t\t\t\t\t\tchecked={useNavigation}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ useNavigation: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Pagination\"\n\t\t\t\t\t\tchecked={usePagination}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ usePagination: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Scrollbar\"\n\t\t\t\t\t\tchecked={useScrollbar}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ useScrollbar: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Autoplay\"\n\t\t\t\t\t\tchecked={autoplay}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ autoplay: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Loop\"\n\t\t\t\t\t\tchecked={loop}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ loop: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Free Mode\"\n\t\t\t\t\t\tchecked={freeMode}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ freeMode: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Centered Slides\"\n\t\t\t\t\t\tchecked={centeredSlides}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ centeredSlides: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"CSS Mode\"\n\t\t\t\t\t\tchecked={cssMode}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ cssMode: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"Controller\"\n\t\t\t\t\t\tchecked={controller}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ controller: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel=\"Speed (ms)\"\n\t\t\t\t\t\tvalue={speed}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ speed: value })}\n\t\t\t\t\t\tmin={100}\n\t\t\t\t\t\tmax={5000}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel=\"Space Between (px)\"\n\t\t\t\t\t\tvalue={spaceBetween}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ spaceBetween: value })}\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={200}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel=\"Slides Per View\"\n\t\t\t\t\t\tvalue={slidesPerView}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ slidesPerView: value })}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={5}\n\t\t\t\t\t/>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tlabel=\"Grid Rows\"\n\t\t\t\t\t\tvalue={gridRows}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ gridRows: value })}\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={5}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Effect\"\n\t\t\t\t\t\tvalue={effect}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: 'Slide', value: 'slide' },\n\t\t\t\t\t\t\t{ label: 'Fade', value: 'fade' },\n\t\t\t\t\t\t\t{ label: 'Cube', value: 'cube' },\n\t\t\t\t\t\t\t{ label: 'Flip', value: 'flip' },\n\t\t\t\t\t\t\t{ label: 'Coverflow', value: 'coverflow' }\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ effect: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Direction\"\n\t\t\t\t\t\tvalue={direction}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{ label: 'Horizontal', value: 'horizontal' },\n\t\t\t\t\t\t\t{ label: 'Vertical', value: 'vertical' }\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ direction: value })}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\n\t\t\t<div {...useBlockProps()}>\n\t\t\t\t{(isSelected || hasInnerBlocksSelected) && (\n\t\t\t\t\t<div className=\"toggle-edit-mode\">\n\t\t\t\t\t\t{!previewMode ?\n\t\t\t\t\t\t\t<Button onClick={() => setPreviewMode(true)} variant=\"primary\" icon={seen}>Switch to preview mode</Button> :\n\t\t\t\t\t\t\t<Button onClick={() => setPreviewMode(false)} variant=\"primary\" icon={edit}>Switch to edit mode</Button>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className='slideshow-container' ref={blockInstance}>\n\t\t\t\t\t{previewMode ? (\n\t\t\t\t\t\t<div id={uniqueId} className=\"swiper\">\n\t\t\t\t\t\t\t<div className=\"swiper-wrapper\">{children}</div>\n\t\t\t\t\t\t\t{usePagination && <div className=\"swiper-pagination\"></div>}\n\t\t\t\t\t\t\t{useNavigation && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className=\"swiper-button-prev\"></div>\n\t\t\t\t\t\t\t\t\t<div className=\"swiper-button-next\"></div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{useScrollbar && <div className=\"swiper-scrollbar\"></div>}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : children}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"append-slide-button\">\n\t\t\t\t\t<ButtonBlockAppender rootClientId={clientId} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"],"names":["module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","wpzoomSlideshowData","pluginUrl"],"sourceRoot":""}